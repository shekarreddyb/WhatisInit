@{
    ViewData["Title"] = "Home Page";
}

<div class="flex h-screen overflow-hidden">
    <!-- Sidebar -->
    <div class="w-1/4 bg-white border-r border-gray-200">
        <!-- Sidebar Header -->
        <header class="relative p-4 border-b border-gray-300 flex justify-between items-center bg-red-600 text-white">
            <h1 class="text-2xl font-semibold">WhatIsInIt</h1>

            <!-- file upload btn -->
            <button id="uploadBtn" class="absolute right-3 z-10 bg-yellow-400 p-2 pl-2.5 text-white text-center text-2xl w-9 h-9 rounded-full">
                <svg width="16px" height="16px" viewBox="0 0 16 16" 
                    xmlns="http://www.w3.org/2000/svg" fill="#000">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M9.5 1.1l3.4 3.5.1.4v2h-1V6H8V2H3v11h4v1H2.5l-.5-.5v-12l.5-.5h6.7l.3.1zM9 2v3h2.9L9 2zm4 14h-1v-3H9v-1h3V9h1v3h3v1h-3v3z"/>
                </svg>
            </button>
            <input type="file" id="fileInput" class="hidden">

        </header>
        <div class="hidden" id="interactionHeadTemplate">
            <div class="interactionHead  flex items-center mb-4 cursor-pointer hover:bg-gray-100 p-2" 
                 data-id="{id}" data-title="{title}">
                <div class="w-12 h-12 bg-gray-300 rounded-full mr-3">
                    <!--<img src="https://placehold.co/200x/ffa8e4/ffffff.svg?text=🤖&font=Lato" alt="User Avatar" class="w-12 h-12 rounded-full"> -->
                </div>
                <div class="flex-1">
                    <h2 class="text-lg font-semibold">{title}</h2>
                    <p class="text-gray-600">{description}</p>
                </div>
            </div>
        </div>
        <!-- Contact List -->
        <div class="overflow-y-auto bg-white h-screen p-3 mb-9 pb-20" id="interactionsContainer">
             <div role="status" class="h-screen text-center relative loader">
                    <svg aria-hidden="true" class="absolute top-1/2 left-1/2 inline w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-cyan-400" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor"/>
                        <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill"/>
                    </svg>
                    <span class="sr-only">Loading...</span>
                </div>
            <input type="hidden" id="currentInteractionId" />
            <div id="interactionHeads">

            </div>
        </div>
    </div>

    <!-- Main Chat Area -->
    <div class="flex-1 bg-white">

        <!-- Chat Messages -->
        <div class="flex-1 relative">
            <!-- Chat Header -->
            <header class="bg-gray-600 p-4 pl-8 text-gray-50 text-ellipsis" id="">
                <h1 class="text-2xl font-semibold" id="interactionTitle">..</h1>
            </header>

            <!-- Chat Messages -->
            <div id="chatMessages">
                <div role="status" class="h-screen text-center relative loader">
                    <svg aria-hidden="true" class="absolute top-1/2 left-1/2 inline w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-cyan-400" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor"/>
                        <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill"/>
                    </svg>
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
            <div class="h-screen overflow-y-auto p-4 pb-40" id="messagesContainer"></div>

            <!-- Chat Input -->
            <footer class="bg-white border-t border-gray-300 p-4 absolute accept-policy right-0 left-0 bottom-16" id="chatInput">
                <div role="status" class="h-full text-center relative loader hidden">
                    <svg aria-hidden="true" class="absolute top-1/2 left-1/2 inline w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-cyan-400" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor"/>
                        <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill"/>
                    </svg>
                    <span class="sr-only">Loading...</span>
                </div>
                <form class="flex items-center" id="promptForm">
                    <button type="button" class="pr-2">
                        <svg width="16px" height="16px" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" fill="#0284c7"><path fill-rule="evenodd" clip-rule="evenodd" d="M9.5 1.1l3.4 3.5.1.4v2h-1V6H8V2H3v11h4v1H2.5l-.5-.5v-12l.5-.5h6.7l.3.1zM9 2v3h2.9L9 2zm4 14h-1v-3H9v-1h3V9h1v3h3v1h-3v3z"/></svg>
                    </button>
                    <input autocomplete="off" type="text" name="prompt" placeholder="Type a message..." class="w-full p-2 rounded-md border border-gray-400 focus:outline-none focus:border-blue-500" />
                    <input type="hidden" name="interactionId" />
                    <button class="bg-teal-500 text-white px-4 py-2 rounded-md ml-2">Send</button>
                </form>
            </footer>
        </div>
    </div>
</div>
<div id="systemMsgTemplate" class="hidden">
    <div class="flex mb-4 cursor-pointer">
        <div class="w-9 h-9 rounded-full flex items-center justify-center mr-2">
            <img src="https://placehold.co/200x/ffa8e4/ffffff.svg?text=ʕ•́ᴥ•̀ʔ&font=Lato" alt="User Avatar" class="w-8 h-8 rounded-full">
        </div>
        <div class="flex max-w-xl bg-gray-100 rounded-lg p-3 gap-3">
            <p class="text-gray-700">{message}</p>
        </div>
    </div>
</div>
<!-- Outgoing Message -->
<div id="userMsgTemplate" class="hidden">
    <div class="flex justify-end mb-4 cursor-pointer">
        <div class="flex max-w-xl bg-cyan-600 text-white rounded-lg p-3 gap-3">
            <p>{message}</p>
        </div>
        <div class="w-9 h-9 rounded-full flex items-center justify-center ml-2">
            <img src="https://placehold.co/200x/b7a8ff/ffffff.svg?text=ʕ•́ᴥ•̀ʔ&font=Lato" alt="My Avatar" class="w-8 h-8 rounded-full">
        </div>
    </div>
</div>
<div class="border-r-4 bg-gray-100 border-cyan-600 hidden">preload css if i use bundler later</div>
@section Scripts {
    <script type="text/javascript">

       /// load interactions list
        function loadInteractions() {
            loadInteractionsFromSource(() => { 
                showLoading('#interactionsContainer');
            }, (data) => { 
                hideLoading('#interactionsContainer');
                populateinteractionsFromTemplate(data);
            }, (err) => { 
                hideLoading('#interactionsContainer');
            });
        }
       
        function loadInteractionsFromSource(beforeSend, onSuccess, onFail) { 
            beforeSend();
            $.ajax({
                url: '/api/interactions',
                type: 'GET',
                contentType: 'application/json',
                beforeSend: function(xhr) {
                  // Set headers or do pre-send tasks
                  // xhr.setRequestHeader('Authorization', 'Bearer your-access-token'); // Example header
                },
                success: function(data, textStatus, jqXHR) {
                  onSuccess(data);
                },
                error: function(jqXHR, textStatus, errorThrown) {
                  onFail({ status: textStatus, err: errorThrown });
                }
            });
        }
        function loadInteraction(intData) {
            $('#interactionTitle').text(intData.title);
            loadInteractionById(intData.id, () => { 
                showLoading('#chatMessages');
            }, (data) => { 
                hideLoading('#chatMessages');
                var selectedInteraction = getElementByInteractionId(intData.id);
                $('.interactionHead').removeClass('border-r-4 bg-gray-100 border-cyan-600');
                selectedInteraction.addClass('border-r-4 bg-gray-100 border-cyan-600');
                populateinteractionMessagesFromTemplate(data);
                $('#currentInteractionId').val(intData.id);
            }, () => { 
                hideLoading('#chatMessages');
            });
        }
       
        function loadInteractionById(id, beforeSend, onSuccess, onFail) { 
            beforeSend();
            $.ajax({
                url: '/api/interactions/'+id,
                type: 'GET',
                contentType: 'application/json',
                // data: {'id': id}, // Replace with your data object
                beforeSend: function(xhr) {
                  // Set headers or do pre-send tasks
                  // xhr.setRequestHeader('Authorization', 'Bearer your-access-token'); // Example header
                },
                success: function(data, textStatus, jqXHR) {
                  onSuccess(data);
                },
                error: function(jqXHR, textStatus, errorThrown) {
                  onFail({ status: textStatus, err: errorThrown });
                }
            });
        }
        function registerOpenHandlerForInteractions() { 
            var interactions = $('#interactionHeads .interactionHead');
            interactions.on('click', function () {
                console.log('%c interaction openend: ' + $(this).data('id'), 'background-color:#334155;color:#facc15');
                /***********************************    call to load individual interaction messages    ******************************/
                loadInteraction($(this).data());
                setQueryParameter('interaction', $(this).data().id);
            });
            var intId = getQueryStringParam('interaction');
            var selectedInteractionFromQuery = getElementByInteractionId(intId);
            let interactionToOpen = selectedInteractionFromQuery !== null ? selectedInteractionFromQuery : interactions[0];
            $(interactionToOpen).trigger('click');
        }
        function populateinteractionsFromTemplate(interactions) {
            var template = document.getElementById('interactionHeadTemplate').innerHTML;
            var contentDiv = document.getElementById('interactionHeads');
            var html = '';
            interactions.forEach(function (item) {
                var itemHTML = template.replace(/{id}/g, item.id)
                    .replace(/{title}/g, item.title)
                    .replace(/{description}/g, item.description);
                html += itemHTML;
            });
            $(contentDiv).html(html);
            registerOpenHandlerForInteractions();
        }

         function populateinteractionMessagesFromTemplate(messages) {
            var contentDiv = document.getElementById('messagesContainer');
            var html = '';
            messages.forEach(function (item) {
                html += getMessageHtml(item, item.from);
            });
            $(contentDiv).html(html);
            scrollChatWindowToBottom();
        }
        /***********************************         All Begins HERE         ******************************/
        /***********************************    call to load interactions    ******************************/
        loadInteractions();

        function sendPrompt(data,beforeSend, onSuccess, onFail) {
            var interactionid = $('#currentInteractionId').val();
            console.log('%csending prompt %c' + data.prompt, 'color:#fcd34d;font-size:23px', 'color:#ea580c;font-size:23px');
            beforeSend();
            $.ajax({
                 url: '/api/interactions/'+interactionid+'/prompt',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data), // Replace with your data object
                beforeSend: function(xhr) {
                  // Set headers or do pre-send tasks
                  // xhr.setRequestHeader('Authorization', 'Bearer your-access-token'); // Example header
                },
                success: function(data, textStatus, jqXHR) {
                  onSuccess(data);
                },
                error: function(jqXHR, textStatus, errorThrown) {
                  onFail({ status: textStatus, err: errorThrown });
                }
            });
        }
        /***********************************    call to send promt    ******************************/
        
        $('#promptForm').on('submit', function (e) { 
            e.preventDefault();
            sendPrompt(formToJSON(this), () => { 
                showLoading('#chatInput');
            }, (data) => {
                let html = getMessageHtml(data, "user");
                appendHtmlToChatWindow(html);
                hideLoading('#chatInput');
                $(this).trigger('reset');
            }, () => { 
                hideLoading('#chatInput');
                $(this).trigger('reset');
            });
        });

        function getMessageHtml(data, from) { 
            var systemTemplate = document.getElementById('systemMsgTemplate').innerHTML;
            var userTemplate = document.getElementById('userMsgTemplate').innerHTML;
            var template = data.from === 'system' ? systemTemplate : userTemplate;
            return template.replace(/{id}/g, data.id)
                    .replace(/{message}/g, data.message);
        }
        function appendHtmlToChatWindow(html){
            var contentDiv = document.getElementById('messagesContainer');
            $(contentDiv).append(html);
           scrollChatWindowToBottom();
        }


        function scrollChatWindowToBottom() {
          const chatContainer = document.getElementById('messagesContainer');
          const scrollHeight = chatContainer.scrollHeight; // Height of the scrollable content
          chatContainer.scrollTo({
            top: scrollHeight,
            behavior: 'smooth' // Enables smooth scrolling
          });
        }

        window.addEventListener('popstate', function(event) {
            var intId = getQueryStringParam('interaction');
            var selectedInteraction = getElementByInteractionId(intId);
            if (selectedInteraction !== null)
                selectedInteraction.trigger('click');
        });

        function getElementByInteractionId(id) { 
            return id != null? $('#interactionHeads .interactionHead[data-id="'+id+'"]'): null;
        }
        $('#uploadBtn').on('click', function() {
            $('#fileInput').click();
        });

        $('#fileInput').change(function() {
            // This function is called when the user selects a file.
            var fileName = $(this).val().split('\\').pop(); // Extracts the file name
            alert(fileName);
          // You can add more actions here to handle the file upload or display the selected file name.
        });
    </script>
}